{"version":3,"sources":["../../../src/api/parseMap.ts"],"names":["AGGREGATION","getLayer","getColorAccessor","getColorValueAccessor","getSizeAccessor","getTextAccessor","getTextPixelOffsetAccessor","OPACITY_MAP","opacityToAlpha","getIconUrlAccessor","negateAccessor","getMaxMarkerSize","_flatten","flatten","log","assert","parseMap","json","keplerMapConfig","datasets","token","version","mapState","mapStyle","config","layers","layerBlending","interactionConfig","visState","id","title","description","createdAt","updatedAt","initialViewState","extractTextLayers","reverse","map","type","visualChannels","dataId","dataset","find","d","data","Layer","propMap","defaultProps","styleProps","createStyleProps","textLabel","createInteractionProps","createChannelProps","createParametersProp","parameters","createLoadOptions","e","error","message","undefined","rest","configRest","filter","t","field","name","label","visConfig","opacity","blendFunc","blendEquation","Object","keys","length","pickable","tooltip","enabled","autoHighlight","mapProps","source","target","mapping","sourceKey","sourceValue","targetKey","key","value","entries","result","stroked","getLineColor","getFillColor","colorAccessor","Array","isArray","color","opacityKey","highlightColor","enable3d","colorField","colorScale","radiusField","radiusScale","sizeField","sizeScale","strokeColorField","strokeColorScale","heightField","heightScale","textLabelField","colorScaleType","colorAggregation","getColorValue","getColorWeight","aggregation","colorRange","range","altitude","columns","dataTransform","features","forEach","geometry","properties","coordinates","getPointRadius","sizeAggregation","radiusRange","sizeRange","fallbackOpacity","strokeOpacity","strokeColorAggregation","strokeColorRange","getElevation","heightAggregation","heightRange","getText","pointType","radius","getTextPixelOffset","customMarkers","maxIconSize","customMarkersUrl","customMarkersRange","filled","useMaskedIcons","getIcon","customMarkersField","fallbackUrl","_subLayerProps","loadOptions","image","imagebitmap","resizeWidth","resizeHeight","resizeQuality","getIconColor","getIconSize","rotationField","getIconAngle","accessToken","fetch","headers","Authorization"],"mappings":"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","sourcesContent":["import GL from '@luma.gl/constants';\nimport {\n  AGGREGATION,\n  getLayer,\n  getColorAccessor,\n  getColorValueAccessor,\n  getSizeAccessor,\n  getTextAccessor,\n  getTextPixelOffsetAccessor,\n  OPACITY_MAP,\n  opacityToAlpha,\n  getIconUrlAccessor,\n  negateAccessor,\n  getMaxMarkerSize\n} from './layer-map';\nimport {_flatten as flatten, log} from '@deck.gl/core';\nimport {assert} from '../utils';\nimport {MapDataset, MapTextSubLayerConfig, VisualChannels} from './types';\n\nexport function parseMap(json) {\n  const {keplerMapConfig, datasets, token} = json;\n  assert(keplerMapConfig.version === 'v1', 'Only support Kepler v1');\n  const {mapState, mapStyle} = keplerMapConfig.config;\n  const {layers, layerBlending, interactionConfig} = keplerMapConfig.config.visState;\n\n  return {\n    id: json.id,\n    title: json.title,\n    description: json.description,\n    createdAt: json.createdAt,\n    updatedAt: json.updatedAt,\n    initialViewState: mapState,\n    mapStyle,\n    token,\n    layers: extractTextLayers(layers.reverse()).map(({id, type, config, visualChannels}) => {\n      try {\n        const {dataId} = config;\n        const dataset: MapDataset | null = datasets.find(d => d.id === dataId);\n        assert(dataset, `No dataset matching dataId: ${dataId}`);\n        const {data} = dataset;\n        assert(data, `No data loaded for dataId: ${dataId}`);\n        const {Layer, propMap, defaultProps} = getLayer(type, config, dataset);\n        const styleProps = createStyleProps(config, propMap);\n        return new Layer({\n          id,\n          data,\n          ...defaultProps,\n          ...(!config.textLabel && createInteractionProps(interactionConfig)),\n          ...styleProps,\n          ...createChannelProps(visualChannels, type, config, data), // Must come after style\n          ...createParametersProp(layerBlending, styleProps.parameters || {}), // Must come after style\n          ...createLoadOptions(token)\n        });\n      } catch (e: any) {\n        log.error(e.message)();\n        return undefined;\n      }\n    })\n  };\n}\n\nfunction extractTextLayers(layers) {\n  return flatten(\n    layers.map(({id, config, ...rest}) => {\n      const {textLabel, ...configRest} = config;\n      return [\n        // Original layer without textLabel\n        {id, config: configRest, ...rest},\n\n        // One layer per valid text label, with full opacity\n        ...textLabel\n          .filter(t => t.field)\n          .map(t => {\n            return {\n              id: `${id}-label-${t.field.name}`,\n              config: {\n                textLabel: t,\n                ...configRest,\n                label: `${config.label}-label-${t.field.name}`,\n                visConfig: {...configRest.visConfig, opacity: 1}\n              },\n              ...rest\n            };\n          })\n      ];\n    })\n  );\n}\n\nfunction createParametersProp(layerBlending, parameters: Record<string, any>) {\n  if (layerBlending === 'additive') {\n    parameters.blendFunc = [GL.SRC_ALPHA, GL.DST_ALPHA];\n    parameters.blendEquation = GL.FUNC_ADD;\n  } else if (layerBlending === 'subtractive') {\n    parameters.blendFunc = [GL.ONE, GL.ONE_MINUS_DST_COLOR, GL.SRC_ALPHA, GL.DST_ALPHA];\n    parameters.blendEquation = [GL.FUNC_SUBTRACT, GL.FUNC_ADD];\n  }\n\n  return Object.keys(parameters).length ? {parameters} : {};\n}\n\nfunction createInteractionProps(interactionConfig) {\n  const pickable = interactionConfig && interactionConfig.tooltip.enabled;\n  return {\n    autoHighlight: pickable,\n    pickable\n  };\n}\n\nfunction mapProps(source, target, mapping) {\n  for (const sourceKey in mapping) {\n    const sourceValue = source[sourceKey];\n    const targetKey = mapping[sourceKey];\n    if (sourceValue === undefined) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (typeof targetKey === 'string') {\n      target[targetKey] = sourceValue;\n    } else if (typeof targetKey === 'function') {\n      const [key, value] = Object.entries(targetKey(sourceValue))[0];\n      target[key] = value;\n    } else if (typeof targetKey === 'object') {\n      // Nested definition, recurse down one level (also handles arrays)\n      mapProps(sourceValue, target, targetKey);\n    }\n  }\n}\n\nfunction createStyleProps(config: MapTextSubLayerConfig, mapping) {\n  const result: Record<string, any> = {};\n  mapProps(config, result, mapping);\n\n  // Kepler format sometimes omits strokeColor. TODO: remove once we can rely on\n  // `strokeColor` always being set when `stroke: true`.\n  if (result.stroked && !result.getLineColor) {\n    result.getLineColor = result.getFillColor;\n  }\n\n  for (const colorAccessor in OPACITY_MAP) {\n    if (Array.isArray(result[colorAccessor])) {\n      const color = [...result[colorAccessor]];\n      const opacityKey = OPACITY_MAP[colorAccessor];\n      const opacity = config.visConfig[opacityKey];\n      color[3] = opacityToAlpha(opacity);\n      result[colorAccessor] = color;\n    }\n  }\n\n  result.highlightColor = config.visConfig.enable3d ? [255, 255, 255, 60] : [252, 242, 26, 255];\n  return result;\n}\n\n/* eslint-disable complexity, max-statements */\nfunction createChannelProps(\n  visualChannels: VisualChannels,\n  type: string,\n  config: MapTextSubLayerConfig,\n  data\n) {\n  const {\n    colorField,\n    colorScale,\n    radiusField,\n    radiusScale,\n    sizeField,\n    sizeScale,\n    strokeColorField,\n    strokeColorScale\n  } = visualChannels;\n  let {heightField, heightScale} = visualChannels;\n  if (type === 'hexagonId') {\n    heightField = sizeField;\n    heightScale = sizeScale;\n  }\n  const {textLabel, visConfig} = config;\n  const result: Record<string, any> = {};\n  const textLabelField = textLabel && textLabel.field;\n\n  if (type === 'grid' || type === 'hexagon') {\n    result.colorScaleType = colorScale;\n    if (colorField) {\n      const {colorAggregation} = config.visConfig;\n      if (!AGGREGATION[colorAggregation]) {\n        result.getColorValue = getColorValueAccessor(colorField, colorAggregation, data);\n      } else {\n        result.getColorWeight = d => d[colorField.name];\n      }\n    }\n  } else if (colorField) {\n    const {colorAggregation: aggregation, colorRange: range} = visConfig;\n    result.getFillColor = getColorAccessor(\n      colorField,\n      // @ts-ignore\n      colorScale,\n      {aggregation, range},\n      visConfig.opacity,\n      data\n    );\n  }\n\n  if (type === 'point') {\n    const altitude = config.columns?.altitude;\n    if (altitude) {\n      result.dataTransform = data => {\n        data.features.forEach(({geometry, properties}) => {\n          const {type, coordinates} = geometry;\n          if (type === 'Point') {\n            coordinates[2] = properties[altitude];\n          }\n        });\n        return data;\n      };\n    }\n  }\n\n  if (radiusField || sizeField) {\n    result.getPointRadius = getSizeAccessor(\n      // @ts-ignore\n      radiusField || sizeField,\n      // @ts-ignore\n      radiusScale || sizeScale,\n      visConfig.sizeAggregation,\n      visConfig.radiusRange || visConfig.sizeRange,\n      data\n    );\n  }\n\n  if (strokeColorField) {\n    const fallbackOpacity = type === 'point' ? visConfig.opacity : 1;\n    const opacity =\n      visConfig.strokeOpacity !== undefined ? visConfig.strokeOpacity : fallbackOpacity;\n    const {strokeColorAggregation: aggregation, strokeColorRange: range} = visConfig;\n    result.getLineColor = getColorAccessor(\n      strokeColorField,\n      // @ts-ignore\n      strokeColorScale,\n      // @ts-ignore\n      {aggregation, range},\n      opacity,\n      data\n    );\n  }\n\n  if (heightField) {\n    result.getElevation = getSizeAccessor(\n      heightField,\n      // @ts-ignore\n      heightScale,\n      visConfig.heightAggregation,\n      visConfig.heightRange || visConfig.sizeRange,\n      data\n    );\n  }\n\n  if (textLabelField) {\n    result.getText = getTextAccessor(textLabelField, data);\n    result.pointType = 'text';\n    const radius = result.getPointRadius || visConfig.radius;\n    result.getTextPixelOffset = getTextPixelOffsetAccessor(textLabel, radius);\n  } else if (visConfig.customMarkers) {\n    const maxIconSize = getMaxMarkerSize(visConfig, visualChannels);\n    const {getPointRadius, getFillColor} = result;\n    const {customMarkersUrl, customMarkersRange, filled: useMaskedIcons} = visConfig;\n\n    result.pointType = 'icon';\n    result.getIcon = getIconUrlAccessor(\n      visualChannels.customMarkersField,\n      customMarkersRange,\n      {fallbackUrl: customMarkersUrl, maxIconSize, useMaskedIcons},\n      data\n    );\n    result._subLayerProps = {\n      'points-icon': {\n        loadOptions: {\n          image: {\n            type: 'imagebitmap'\n          },\n          imagebitmap: {\n            resizeWidth: maxIconSize,\n            resizeHeight: maxIconSize,\n            resizeQuality: 'high'\n          }\n        }\n      }\n    };\n\n    if (getFillColor && useMaskedIcons) {\n      result.getIconColor = getFillColor;\n    }\n\n    if (getPointRadius) {\n      result.getIconSize = getPointRadius;\n    }\n\n    if (visualChannels.rotationField) {\n      result.getIconAngle = negateAccessor(\n        getSizeAccessor(visualChannels.rotationField, undefined, null, undefined, data)\n      );\n    }\n  }\n\n  return result;\n}\n\nfunction createLoadOptions(accessToken: string) {\n  return {\n    loadOptions: {fetch: {headers: {Authorization: `Bearer ${accessToken}`}}}\n  };\n}\n"],"file":"parseMap.js"}