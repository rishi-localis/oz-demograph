{"version":3,"sources":["../../../src/api/parseMap.ts"],"names":["parseMap","json","keplerMapConfig","datasets","token","version","config","mapState","mapStyle","visState","layers","layerBlending","interactionConfig","id","title","description","createdAt","updatedAt","initialViewState","extractTextLayers","reverse","map","type","visualChannels","dataId","dataset","find","d","data","Layer","propMap","defaultProps","styleProps","createStyleProps","textLabel","createInteractionProps","createChannelProps","createParametersProp","parameters","createLoadOptions","e","log","error","message","undefined","rest","configRest","filter","t","field","name","label","visConfig","opacity","blendFunc","blendEquation","Object","keys","length","pickable","tooltip","enabled","autoHighlight","mapProps","source","target","mapping","sourceKey","sourceValue","targetKey","entries","key","value","result","stroked","getLineColor","getFillColor","colorAccessor","OPACITY_MAP","Array","isArray","color","opacityKey","highlightColor","enable3d","colorField","colorScale","radiusField","radiusScale","sizeField","sizeScale","strokeColorField","strokeColorScale","heightField","heightScale","textLabelField","colorScaleType","colorAggregation","AGGREGATION","getColorValue","getColorWeight","aggregation","range","colorRange","altitude","columns","dataTransform","features","forEach","geometry","properties","coordinates","getPointRadius","sizeAggregation","radiusRange","sizeRange","fallbackOpacity","strokeOpacity","strokeColorAggregation","strokeColorRange","getElevation","heightAggregation","heightRange","getText","pointType","radius","getTextPixelOffset","customMarkers","maxIconSize","customMarkersUrl","customMarkersRange","useMaskedIcons","filled","getIcon","customMarkersField","fallbackUrl","_subLayerProps","loadOptions","image","imagebitmap","resizeWidth","resizeHeight","resizeQuality","getIconColor","getIconSize","rotationField","getIconAngle","accessToken","fetch","headers","Authorization"],"mappings":"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","sourcesContent":["import GL from '@luma.gl/constants';\nimport {\n  AGGREGATION,\n  getLayer,\n  getColorAccessor,\n  getColorValueAccessor,\n  getSizeAccessor,\n  getTextAccessor,\n  getTextPixelOffsetAccessor,\n  OPACITY_MAP,\n  opacityToAlpha,\n  getIconUrlAccessor,\n  negateAccessor,\n  getMaxMarkerSize\n} from './layer-map';\nimport {_flatten as flatten, log} from '@deck.gl/core';\nimport {assert} from '../utils';\nimport {MapDataset, MapTextSubLayerConfig, VisualChannels} from './types';\n\nexport function parseMap(json) {\n  const {keplerMapConfig, datasets, token} = json;\n  assert(keplerMapConfig.version === 'v1', 'Only support Kepler v1');\n  const {mapState, mapStyle} = keplerMapConfig.config;\n  const {layers, layerBlending, interactionConfig} = keplerMapConfig.config.visState;\n\n  return {\n    id: json.id,\n    title: json.title,\n    description: json.description,\n    createdAt: json.createdAt,\n    updatedAt: json.updatedAt,\n    initialViewState: mapState,\n    mapStyle,\n    token,\n    layers: extractTextLayers(layers.reverse()).map(({id, type, config, visualChannels}) => {\n      try {\n        const {dataId} = config;\n        const dataset: MapDataset | null = datasets.find(d => d.id === dataId);\n        assert(dataset, `No dataset matching dataId: ${dataId}`);\n        const {data} = dataset;\n        assert(data, `No data loaded for dataId: ${dataId}`);\n        const {Layer, propMap, defaultProps} = getLayer(type, config, dataset);\n        const styleProps = createStyleProps(config, propMap);\n        return new Layer({\n          id,\n          data,\n          ...defaultProps,\n          ...(!config.textLabel && createInteractionProps(interactionConfig)),\n          ...styleProps,\n          ...createChannelProps(visualChannels, type, config, data), // Must come after style\n          ...createParametersProp(layerBlending, styleProps.parameters || {}), // Must come after style\n          ...createLoadOptions(token)\n        });\n      } catch (e: any) {\n        log.error(e.message)();\n        return undefined;\n      }\n    })\n  };\n}\n\nfunction extractTextLayers(layers) {\n  return flatten(\n    layers.map(({id, config, ...rest}) => {\n      const {textLabel, ...configRest} = config;\n      return [\n        // Original layer without textLabel\n        {id, config: configRest, ...rest},\n\n        // One layer per valid text label, with full opacity\n        ...textLabel\n          .filter(t => t.field)\n          .map(t => {\n            return {\n              id: `${id}-label-${t.field.name}`,\n              config: {\n                textLabel: t,\n                ...configRest,\n                label: `${config.label}-label-${t.field.name}`,\n                visConfig: {...configRest.visConfig, opacity: 1}\n              },\n              ...rest\n            };\n          })\n      ];\n    })\n  );\n}\n\nfunction createParametersProp(layerBlending, parameters: Record<string, any>) {\n  if (layerBlending === 'additive') {\n    parameters.blendFunc = [GL.SRC_ALPHA, GL.DST_ALPHA];\n    parameters.blendEquation = GL.FUNC_ADD;\n  } else if (layerBlending === 'subtractive') {\n    parameters.blendFunc = [GL.ONE, GL.ONE_MINUS_DST_COLOR, GL.SRC_ALPHA, GL.DST_ALPHA];\n    parameters.blendEquation = [GL.FUNC_SUBTRACT, GL.FUNC_ADD];\n  }\n\n  return Object.keys(parameters).length ? {parameters} : {};\n}\n\nfunction createInteractionProps(interactionConfig) {\n  const pickable = interactionConfig && interactionConfig.tooltip.enabled;\n  return {\n    autoHighlight: pickable,\n    pickable\n  };\n}\n\nfunction mapProps(source, target, mapping) {\n  for (const sourceKey in mapping) {\n    const sourceValue = source[sourceKey];\n    const targetKey = mapping[sourceKey];\n    if (sourceValue === undefined) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (typeof targetKey === 'string') {\n      target[targetKey] = sourceValue;\n    } else if (typeof targetKey === 'function') {\n      const [key, value] = Object.entries(targetKey(sourceValue))[0];\n      target[key] = value;\n    } else if (typeof targetKey === 'object') {\n      // Nested definition, recurse down one level (also handles arrays)\n      mapProps(sourceValue, target, targetKey);\n    }\n  }\n}\n\nfunction createStyleProps(config: MapTextSubLayerConfig, mapping) {\n  const result: Record<string, any> = {};\n  mapProps(config, result, mapping);\n\n  // Kepler format sometimes omits strokeColor. TODO: remove once we can rely on\n  // `strokeColor` always being set when `stroke: true`.\n  if (result.stroked && !result.getLineColor) {\n    result.getLineColor = result.getFillColor;\n  }\n\n  for (const colorAccessor in OPACITY_MAP) {\n    if (Array.isArray(result[colorAccessor])) {\n      const color = [...result[colorAccessor]];\n      const opacityKey = OPACITY_MAP[colorAccessor];\n      const opacity = config.visConfig[opacityKey];\n      color[3] = opacityToAlpha(opacity);\n      result[colorAccessor] = color;\n    }\n  }\n\n  result.highlightColor = config.visConfig.enable3d ? [255, 255, 255, 60] : [252, 242, 26, 255];\n  return result;\n}\n\n/* eslint-disable complexity, max-statements */\nfunction createChannelProps(\n  visualChannels: VisualChannels,\n  type: string,\n  config: MapTextSubLayerConfig,\n  data\n) {\n  const {\n    colorField,\n    colorScale,\n    radiusField,\n    radiusScale,\n    sizeField,\n    sizeScale,\n    strokeColorField,\n    strokeColorScale\n  } = visualChannels;\n  let {heightField, heightScale} = visualChannels;\n  if (type === 'hexagonId') {\n    heightField = sizeField;\n    heightScale = sizeScale;\n  }\n  const {textLabel, visConfig} = config;\n  const result: Record<string, any> = {};\n  const textLabelField = textLabel && textLabel.field;\n\n  if (type === 'grid' || type === 'hexagon') {\n    result.colorScaleType = colorScale;\n    if (colorField) {\n      const {colorAggregation} = config.visConfig;\n      if (!AGGREGATION[colorAggregation]) {\n        result.getColorValue = getColorValueAccessor(colorField, colorAggregation, data);\n      } else {\n        result.getColorWeight = d => d[colorField.name];\n      }\n    }\n  } else if (colorField) {\n    const {colorAggregation: aggregation, colorRange: range} = visConfig;\n    result.getFillColor = getColorAccessor(\n      colorField,\n      // @ts-ignore\n      colorScale,\n      {aggregation, range},\n      visConfig.opacity,\n      data\n    );\n  }\n\n  if (type === 'point') {\n    const altitude = config.columns?.altitude;\n    if (altitude) {\n      result.dataTransform = data => {\n        data.features.forEach(({geometry, properties}) => {\n          const {type, coordinates} = geometry;\n          if (type === 'Point') {\n            coordinates[2] = properties[altitude];\n          }\n        });\n        return data;\n      };\n    }\n  }\n\n  if (radiusField || sizeField) {\n    result.getPointRadius = getSizeAccessor(\n      // @ts-ignore\n      radiusField || sizeField,\n      // @ts-ignore\n      radiusScale || sizeScale,\n      visConfig.sizeAggregation,\n      visConfig.radiusRange || visConfig.sizeRange,\n      data\n    );\n  }\n\n  if (strokeColorField) {\n    const fallbackOpacity = type === 'point' ? visConfig.opacity : 1;\n    const opacity =\n      visConfig.strokeOpacity !== undefined ? visConfig.strokeOpacity : fallbackOpacity;\n    const {strokeColorAggregation: aggregation, strokeColorRange: range} = visConfig;\n    result.getLineColor = getColorAccessor(\n      strokeColorField,\n      // @ts-ignore\n      strokeColorScale,\n      // @ts-ignore\n      {aggregation, range},\n      opacity,\n      data\n    );\n  }\n\n  if (heightField) {\n    result.getElevation = getSizeAccessor(\n      heightField,\n      // @ts-ignore\n      heightScale,\n      visConfig.heightAggregation,\n      visConfig.heightRange || visConfig.sizeRange,\n      data\n    );\n  }\n\n  if (textLabelField) {\n    result.getText = getTextAccessor(textLabelField, data);\n    result.pointType = 'text';\n    const radius = result.getPointRadius || visConfig.radius;\n    result.getTextPixelOffset = getTextPixelOffsetAccessor(textLabel, radius);\n  } else if (visConfig.customMarkers) {\n    const maxIconSize = getMaxMarkerSize(visConfig, visualChannels);\n    const {getPointRadius, getFillColor} = result;\n    const {customMarkersUrl, customMarkersRange, filled: useMaskedIcons} = visConfig;\n\n    result.pointType = 'icon';\n    result.getIcon = getIconUrlAccessor(\n      visualChannels.customMarkersField,\n      customMarkersRange,\n      {fallbackUrl: customMarkersUrl, maxIconSize, useMaskedIcons},\n      data\n    );\n    result._subLayerProps = {\n      'points-icon': {\n        loadOptions: {\n          image: {\n            type: 'imagebitmap'\n          },\n          imagebitmap: {\n            resizeWidth: maxIconSize,\n            resizeHeight: maxIconSize,\n            resizeQuality: 'high'\n          }\n        }\n      }\n    };\n\n    if (getFillColor && useMaskedIcons) {\n      result.getIconColor = getFillColor;\n    }\n\n    if (getPointRadius) {\n      result.getIconSize = getPointRadius;\n    }\n\n    if (visualChannels.rotationField) {\n      result.getIconAngle = negateAccessor(\n        getSizeAccessor(visualChannels.rotationField, undefined, null, undefined, data)\n      );\n    }\n  }\n\n  return result;\n}\n\nfunction createLoadOptions(accessToken: string) {\n  return {\n    loadOptions: {fetch: {headers: {Authorization: `Bearer ${accessToken}`}}}\n  };\n}\n"],"file":"parseMap.js"}